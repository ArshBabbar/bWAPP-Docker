AD also uses several other authentication methods such as LM,NTLM,NTLMv1 and NTLMv2.
LM and NTML are the hash names and NTLMv1 and NTLMv2 are authentication protocols that utilize the LM OR nt hash.

------ Hash Protocol Comparison ----

Hash/Protocol | Cryptographic  | Mutual         |  Message  | Trusted Third
              |     technique  | Authentication |  Type     | Party
              |                |                |           |
___________________________________________________________________________________
NTLM          | Symmetric key  |  NO            | Random    |  Domain Controller
              | cryptography   |                | number    |
              |                |                |           |
___________________________________________________________________________________
NTLMv1        | Symmetric key  |  NO            |MD4 hash,  |  Domain Controller
              | cryptography   |                |random     |
              |                |                |number     |
___________________________________________________________________________________
NTLMv2        | Symmetric key  |  NO            |MD4 hash,  |  Domain Controller
              | cryptography   |                |random     |
              |                |                |number     |
___________________________________________________________________________________
Kerberos      | Symmetric key  |  Yes           |Encrypted  |  Domain Controller/
              | cryptography & |                |ticket     | KEY Distibution Center 
              | asymmetric     |                |using      |       (KDC)
              | cryptography   |                |DES, MD5   |
___________________________________________________________________________________

----  LM  ----

LAN manager(LM or LANMAN) hashes are the oldest password storage mechanism used by the Windows operating system.
Not in use due to week Security

it uses a 14 character password which is of 2 chunks of 7 characters not case sensitive and are converted to uppercase.
hence easy to break

---- NTHash ----

NT LAN Manager(NTLM) hashes are used on modern Windows systems.it is a challenge-response suthentication protocol and uses three messages to authenticate:
a client first sends a NEGOTIATE_MESSAGE to the server
whose response is a CHALLENGE_MESSAGE to verify the client's identity
Lastly,the client responds with an AUTHENTICATE_MESSAGE 

these hashes are stored locallyin the SAM database or the NTDS>DIT database file on a DC.
The NT hash, which is the MD4 hash of the little-endian UTF-16 value of the password.
The algorithm can be visualized as: MD4(UTF-16-LE(password)).

An NTLM hash looks like this:
Rachel:500:aad3c435b514a4eeaad3b935b51304fe:e46b9e548fa0d122de7f59fb6d48eaa2:::

Racher is the username
500 is RID
aad3c435b514a4eeaad3b935b51304fe is the LM hash,if LM hash is disabled on the system then of no use
e46b9e548fa0d122de7f59fb6d48eaa2 is the NT hash.

----NTLMv1(Net-NTLMv1)----

the NTLM protocol performs a challenge/response between a server and client using the NT hash.
NTMLv1 uses both the NT and the LM hash,which can make it easier to "crack" offline after capturing a hash.
the protocol is used for network authentication and the Net-NTLMv1 hash itself is created from a challenge/response algorithm.
the server sends client an 8-byte random number(challenge)
and the client return a 24-byte responce.

----NTLMv2(Net-NTLMv2)----

NTLMv2 protocol was created as an strong alternative of NTLMv1.
it is default in windows 2000.it is hardened against certain spoofing attacks that NTLMv1 is susceptible to.
NTLMv2 sends 2 responses to the 8-byte challenge received by the server.
these responses contain a 16-byte HMAC-MD5 hash of the challenge.
a randomly generated challenge from the client and an HMAC-MD5 hash of the user's credentials.
a second response is sent,using a varible-length lient challenge including the current time,an 8-byte random value and the domain name.

V2 Challenge & Responce Algo 
|SC = 8-byte server challenge, random
|CC = 8-byte client challenge, random
|CC* = (X, time, CC2, domain name)
|v2-Hash = HMAC-MD5(NT-Hash, user name, domain name)
|LMv2 = HMAC-MD5(v2-Hash, SC, CC)
|NTv2 = HMAC-MD5(v2-Hash, SC, CC*)
|response = LMv2 | CC | NTv2 | CC*

Example Hash:
admin::N46iSNekpT:08ca45b7d7ea58ee:88dcbe4446168966a153a0064958dac6:5c7830315c7830310000000000000b45c67103d07d7b95acd12ffa11230e0000000052920b85f78d013c31cdb3b92f5d765c783030

----Domain Cached Credentials(MSCacher2)----

MS Cachev1 and v2 algo also known as Domain Cached Credentials(DCC) to solve a potentail issue
of domains-joined hosts being unable to communicate with a DC.
