To successfully identify and exploit buffer overflows in Windows programs, we need to debug the program to follow its execution flow and its data in memory.

There are many tools we can use for debugging, like Immunity Debugger, OllyDBG, WinGDB, or IDA Pro.

we will be using x64dbg, which is an excellent Windows debugger aimed specifically at binary exploitation and reverse engineering.

In addition to the debugger itself, we will utilize a binary exploitation plugin to efficiently carry out many tasks required for identifying and exploiting buffer overflows.
we will be using ERC.Xdbg, which is an open-source binary exploitation plugin for x64dbg.

_________________________________
Installation

1. x64dbg

To install x64dbg, we can follow the instructions as shown in its GitHub Page, and go to the latest release page, and download the file
GitHub Page -->https://github.com/x64dbg/x64dbg
latest release page -->https://github.com/x64dbg/x64dbg/releases/tag/snapshot

Note:
|x64dbg comes with two separate applications, one for x32 and one for x64, each under their folder.
|Clicking on x96dbg.exe as noted above will register the version that matches our Windows VM, which in our case is the x32 one.

2. ERC

