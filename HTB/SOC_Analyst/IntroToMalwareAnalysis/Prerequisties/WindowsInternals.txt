To conduct effective malware analysis, a profound understanding of Windows internals is essential.
Windows operating systems function in two main modes:

1.User Mode: 
This mode is where most applications and user processes operate.
 in this mode, malware can still manipulate files, registry settings, network connections, and other user-accessible resources,
 and it may attempt to escalate privileges to gain more control over the system.

2.Kernel Mode:
In contrast, kernel mode is a highly privileged mode where the Windows kernel runs. 
kernel has unrestricted access to system resources, hardware, and critical functions.
It provides core operating system services, manages system resources, and enforces security and stability.

____________________
User-mode Components

User-mode components are those parts of the operating system that don't have direct access to hardware or kernel data structures.
They interact with system resources through APIs and system calls

1.System Support Processes: These are essential components that provide crucial functionalities and services such as
 logon processes (winlogon.exe), Session Manager (smss.exe), and Service Control Manager (services.exe).
 These aren't Windows services but they are necessary for the proper functioning of the system.

2.Service Processes: These processes host Windows services like the Windows Update Service, Task Scheduler, and Print Spooler services.
 They usually run in the background, executing tasks according to their configuration and parameters.

3.Service Processes: These processes host Windows services like the Windows Update Service, Task Scheduler, and Print Spooler services.
 They usually run in the background, executing tasks according to their configuration and parameters.

4.Environment Subsystems: These components are responsible for providing execution environments for specific types of applications or processes.
 They include the Win32 Subsystem, POSIX, and OS/2.

5.Subsystem DLLs: These dynamic-link libraries translate documented functions into appropriate internal native system calls, primarily implemented in NTDLL.DLL.
 Examples include kernelbase.dll, user32.dll, wininet.dll, and advapi32.dll.

---->>>>>

Kernel-mode Components

Kernel-mode components are those parts of the operating system that have direct access to hardware and kernel data structures.

1.Executive: This upper layer in kernel mode gets accessed through functions from NTDLL.DLL. It consists of components like the I/O Manager, Object Manager, Security Reference Monitor, Process Manager, and others,
 managing the core aspects of the operating system such as I/O operations, object management, security, and processes.
 It runs some checks first, and then passes the call to kernel, or calls the appropriate device driver to perform the requested operation.

2.Kernel: This component manages system resources, providing low-level services like thread scheduling,
 interrupt and exception dispatching, and multiprocessor synchronization.

3.Device Drivers: These software components enable the OS to interact with hardware devices.
 They serve as intermediaries, allowing the system to manage and control hardware and software resources.

4.Hardware Abstraction Layer (HAL): This component provides an abstraction layer between the hardware devices and the OS.
 It allows software developers to interact with hardware in a consistent and platform-independent manner.

5.Windowing and Graphics System (Win32k.sys):
 This subsystem is responsible for managing the graphical user interface (GUI) and rendering visual elements on the screen.

____________________
Windows API Call Flow

