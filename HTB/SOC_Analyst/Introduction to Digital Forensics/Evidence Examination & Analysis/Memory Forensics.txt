Memory forensics, also known as volatile memory analysis,
is a specialized branch of digital forensics that focuses on the examination and analysis of the volatile memory (RAM) of a computer or digital device. 

______________________________
Here are some types of data found in RAM that are valuable for incident investigation:

Network connections
File handles and open Files
Open registry keys
Running processes on the system
Loaded modules
Loaded device drivers
Command history and console sessions
Kernel data structures
User and credential information
Malware artifacts
System configuration
Process memory regions

______________________________
The following outlines a systematic approach to memory forensics,
formulated to aid in in-memory investigations and drawing inspiration from SANS's six-step memory forensics methodology.

1.Process Identification and Verification:
 Enumerate all running processes.
 Determine their origin within the operating system.
 Cross-reference with known legitimate processes.
 Highlight any discrepancies or suspicious naming conventions.

2.Deep Dive into Process Components:
 Examine DLLs linked to the suspicious process.
 Check for unauthorized or malicious DLLs.
 Investigate any signs of DLL injection or hijacking.

3.Network Activity Analysis:
 Review active and passive network connections in the system's memory.
 Identify and document external IP addresses and associated domains.
 Determine the nature and purpose of the communication.
 Validate the process' legitimacy.
 Assess if the process typically requires network communication.
 Trace back to the parent process.
 Evaluate its behavior and necessity.

4.Code Injection Detection:
 Use memory analysis tools to detect anomalies or signs of these techniques.
 Identify any processes that seem to occupy unusual memory spaces or exhibit unexpected behaviors.

5.Rootkit Discovery:
 Scan for signs of rootkit activity or deep OS alterations.
 Identify any processes or drivers operating at unusually high privileges or exhibiting stealth behaviors.

6.Extraction of Suspicious Elements:
 Dumping the suspicious components from memory.
 Storing them securely for subsequent examination using specialized forensic tools.

______________________________
The Volatility Framework

The preferred tool for conducting memory forensics is Volatility ->https://volatilityfoundation.org/

Volatility is a leading open-source memory forensics framework. 
Volatility modules or plugins are extensions or add-ons that enhance the functionality of the Volatility Framework by extracting specific information or perform specific analysis tasks on memory images.

Some commonly used modules include:

pslist: Lists the running processes.
cmdline: Displays process command-line arguments
netscan: Scans for network connections and open ports.
malfind: Scans for potentially malicious code injected into processes.
handles: Scans for open handles
svcscan: Lists Windows services.
dlllist: Lists loaded DLLs (Dynamic-link Libraries) in a process.
hivelist: Lists the registry hives in memory.

Volatility offers extensive documentation. You can find modules and their associated documentation using the following links:

Volatility v2: https://github.com/volatilityfoundation/volatility/wiki/Command-Reference
Volatility v3: https://volatility3.readthedocs.io/en/latest/index.html
A useful Volatility (v2 & v3) cheatsheet can be found here: https://blog.onfvp.com/post/volatility-cheatsheet/

______________________________
